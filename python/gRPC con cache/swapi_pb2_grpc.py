# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import swapi_pb2 as swapi__pb2


class SwapiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPerson = channel.unary_unary(
                '/swapi.SwapiService/GetPerson',
                request_serializer=swapi__pb2.GetPersonRequest.SerializeToString,
                response_deserializer=swapi__pb2.Person.FromString,
                )
        self.GetSpecies = channel.unary_unary(
                '/swapi.SwapiService/GetSpecies',
                request_serializer=swapi__pb2.GetSpeciesRequest.SerializeToString,
                response_deserializer=swapi__pb2.Species.FromString,
                )
        self.GetPlanet = channel.unary_unary(
                '/swapi.SwapiService/GetPlanet',
                request_serializer=swapi__pb2.GetPlanetRequest.SerializeToString,
                response_deserializer=swapi__pb2.Planet.FromString,
                )


class SwapiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpecies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlanet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SwapiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPerson,
                    request_deserializer=swapi__pb2.GetPersonRequest.FromString,
                    response_serializer=swapi__pb2.Person.SerializeToString,
            ),
            'GetSpecies': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpecies,
                    request_deserializer=swapi__pb2.GetSpeciesRequest.FromString,
                    response_serializer=swapi__pb2.Species.SerializeToString,
            ),
            'GetPlanet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlanet,
                    request_deserializer=swapi__pb2.GetPlanetRequest.FromString,
                    response_serializer=swapi__pb2.Planet.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'swapi.SwapiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SwapiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/swapi.SwapiService/GetPerson',
            swapi__pb2.GetPersonRequest.SerializeToString,
            swapi__pb2.Person.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpecies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/swapi.SwapiService/GetSpecies',
            swapi__pb2.GetSpeciesRequest.SerializeToString,
            swapi__pb2.Species.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlanet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/swapi.SwapiService/GetPlanet',
            swapi__pb2.GetPlanetRequest.SerializeToString,
            swapi__pb2.Planet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
